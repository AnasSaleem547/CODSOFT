

#include <stdio.h> #include <stdlib.h> #include <string.h> #include <fcntl.h>
#include <sys/shm.h>
#include <sys/stat.h> #include <sys/mman.h> #include <unistd.h>
int main() {
const int SIZE = 4096;
const char *name = "OS";
// the size (in bytes) of shared memory object
// name of the shared memory object
const char *message_0 = "Hello"; // strings written to shared memory
const char *message_1 = "World!";
int fd;
// shared memory file descriptor
char *ptr; // pointer to shared memory obect
fd = shm_open(name, O_CREAT | O_RDWR, 0666); // create the shared memory object ftruncate(fd, SIZE); // configure the size of the shared memory object
// memory map the shared memory object
ptr = (char *) mmap(0, SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0); // write to the shared memory object sprintf(ptr, "%s", message_0); ptr += strlen(message_0); sprintf(ptr, "%s", message_1); ptr += strlen(message_1);
return 0;
gcc test.c -o test -lrt
